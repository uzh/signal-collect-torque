# This is an example deployment configuration.
# The actually used configuration has the be named deployment.config
deployment {
	torque {
		server {
			address = "torque-server-address"
			username = "your-server-username"
		}
		job {
			repetitions = 1
			number-of-nodes = 3
			cores-per-node = 23
			memory = "80gb"
			walltime = "00:59:59"
			working-dir = "/home/torque/tmp/${USER}.${PBS_JOBID}"
		}
	}
	jvm {
		deployed-jar = "./target/scala-2.11/signal-collect-torque-assembly-1.0-SNAPSHOT.jar"
		binary-path = "" 
		parameters = "-Xmx20000m -Xms20000m -XX:+AggressiveOpts -XX:+AlwaysPreTouch -XX:+UseNUMA -XX:-UseBiasedLocking -XX:MaxInlineSize=1024"
	}
	akka {
	    kryo-initializer = "com.signalcollect.configuration.KryoInit"
#		kryo-registrations = [
#			"com.signalcollect.triplerush.vertices.SIndex",
#			"com.signalcollect.triplerush.vertices.PIndex",
#			"com.signalcollect.triplerush.vertices.OIndex",
#			"com.signalcollect.triplerush.vertices.SPIndex",
#			"com.signalcollect.triplerush.vertices.POIndex",
#			"com.signalcollect.triplerush.vertices.SOIndex",
#			"com.signalcollect.triplerush.TriplePattern",
#			"com.signalcollect.triplerush.PlaceholderEdge",
#			"com.signalcollect.triplerush.CardinalityRequest",
#			"com.signalcollect.triplerush.CardinalityReply",
#			"com.signalcollect.triplerush.ChildIdRequest",
#			"com.signalcollect.triplerush.ChildIdReply",
#			"Array[com.signalcollect.triplerush.TriplePattern]",
#			"com.signalcollect.interfaces.SignalMessage$mcIJ$sp",
#			"com.signalcollect.interfaces.AddEdge",
#			"akka.actor.RepointableActorRef"
# 		]
	}
	setup {
		#copy-files = [
        #    {
        #        local-path = "./some-local-file-name"
        #        remote-path = "~/some-remote-file-name"
        #    }
		#]
	}
	algorithm {
		class = "com.signalcollect.deployment.PageRankExample"
		parameters {
			"some-parameter-name" = "some-parameter-value"
		}
	}
}
